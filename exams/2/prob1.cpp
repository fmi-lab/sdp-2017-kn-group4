/////////////////////////////////////////////////////////////
//
// Author: попълнете името си тук
// FN: попълнете факултетния си номер тук
// Date: 21.01.2018
//

#include <cstddef>
#include <string>

///
/// Структура, описваща възел в двоично дърво
///
struct Node {
  char data;
  Node* left;
  Node* right;
};

// Да се реализира функция
// [подходящ тип] buildTree ([подходящ тип] s) 
// която построява дърво, представящо низа s, и да връща указател към корена му.
Node* buildTree(std::string const& s, size_t length) {
  if (length == 0) {
    return nullptr;
  }

  size_t middle = length / 2;

  return new Node {
    s[middle],
    buildTree(s.substr(0, middle), middle),
    buildTree(s.substr(middle + 1), length - middle - 1)
  };
}

Node* buildTree(std::string const& s) {
  return buildTree(s, s.length());
}

//-------------------------------------------------------------------------
//
// ВАЖНО: Преди предаване на решението, моля премахнете коментара от дадения по-долу ред,
//        за да активирате автоматичните тестове за решението си.
//
//-------------------------------------------------------------------------
#include "prob1-tests.h"

#include "UnitTestFramework.h"

int main() {

  //-------------------------------------------------------------------------
  //
  // ВАЖНО: При предаване на работата във тялото на функцията main не трябва да се
  //        изпълнява нищо друго освен функцията RunTests().
  //
  //-------------------------------------------------------------------------
  RunTests();

  return 0;
}
